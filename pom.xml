<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.learninghub.grpc</groupId>
	<artifactId>grpc-test-microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>grpc-test-microservice</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
		<grpc.version>1.70.0</grpc.version>
		<protobuf-java.version>3.25.6</protobuf-java.version>
		<spring-grpc.version>0.5.0</spring-grpc.version>
	</properties>
	<dependencies>
		<!--Provides gRPC server and client capabilities.
		Supports streaming, authentication, and reflection services.-->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-services</artifactId>
		</dependency>
		<!-- Integrates Spring Boot with gRPC seamlessly.
		Handles service registration, configuration, and lifecycle.
		Provides an easier way to use gRPC with Spring dependency injection-->
		<dependency>
			<groupId>org.springframework.grpc</groupId>
			<artifactId>spring-grpc-spring-boot-starter</artifactId>
		</dependency>
		<!--for debugging and expose as rest api for clients which dont support grpc-->
		<dependency>
   			 <groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.grpc</groupId>
			<artifactId>spring-grpc-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Protobuf Java Runtime (Required for Serialization/Deserialization at Runtime) -->
		<dependency>
    		<groupId>com.google.protobuf</groupId>
    		<artifactId>protobuf-java</artifactId>
    		<version>${protobuf-java.version}</version>
		</dependency>

		<!-- gRPC Core (Core Library for gRPC) -->
		<dependency>
   			<groupId>io.grpc</groupId>
    		<artifactId>grpc-core</artifactId>
    		<version>${grpc.version}</version>
		</dependency>

		<!-- gRPC Stub (Required for Generating Stub Clients and Servers) -->
		<dependency>
   			 <groupId>io.grpc</groupId>
   			 <artifactId>grpc-stub</artifactId>
   			 <version>${grpc.version}</version>
		</dependency>

		<!-- gRPC Protobuf (Bridges Protobuf and gRPC) -->
		<dependency>
   			 <groupId>io.grpc</groupId>
    		 <artifactId>grpc-protobuf</artifactId>
    		 <version>${grpc.version}</version>
		</dependency>

		<!-- gRPC Netty (Required for Running gRPC Server with Netty) -->
		<dependency>
  		  	<groupId>io.grpc</groupId>
   		 	<artifactId>grpc-netty-shaded</artifactId>
    		<version>${grpc.version}</version>
		</dependency>

	</dependencies>
	<dependencyManagement>
		<dependencies>
		<!-- Defines compatible versions for gRPC-related dependencies
		Ensures all gRPC libraries work together without conflicts-->
			<dependency>
				<groupId>org.springframework.grpc</groupId>
				<artifactId>spring-grpc-dependencies</artifactId>
				<version>${spring-grpc.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.7.1</version>
				<executions>
					<execution>
						<id>initialize</id>
						<phase>initialize</phase>
						<goals>
							<goal>detect</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Protobuf Compiler (Required for gRPC)
			gRPC messages and services are defined using Protocol Buffers (protobuf),
			 which need to be compiled into Java code.-->
			<plugin>
				<groupId>org.xolstice.maven.plugins</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<version>0.6.1</version>
				<configuration>
					<protocArtifact>com.google.protobuf:protoc:${protobuf-java.version}:exe:${os.detected.classifier}</protocArtifact>
					<pluginId>grpc-java</pluginId>
					<pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
							<goal>compile-custom</goal>
						</goals>
						<configuration>
							<pluginParameter>jakarta_omit,@generated=omit</pluginParameter>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
